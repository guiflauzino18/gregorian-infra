name: "Deploy Infra Gregorian"

on:
    workflow_call:
        inputs:
            environment:
                type: string
                required: true
            aws-assume-tole-arn:
                type: string
                required: true
            aws-region:
                type: string
                required: true
            aws-bucket-statefile:
                type: string
                required: true

jobs:
    terraform:
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash

        steps:
            - name: Checkout Code
              uses: action/checkout@v3

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: 1.8.3

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                    role-to-assume: ${{inputs.aws-assume-tole-arn}}
                    role-session-name: GitHub_Actions_Deploy_Gregorian
                    aws-region: ${{inputs.aws-region}}

            - name: Terraform Init
              run: |
                cd infra/dev/${{inputs.environment}} && terraform init \
                  -backend-config="bucket=${{inputs.aws-bucket-statefile}}"  \
                  -backend-config=key="key=${{github.event.repository.name}}" \
                  -backend-config="region=${{inputs.aws-region}}"

            - name: Terraform Validate
              run: terraform validate

            - name: Terraform Plan
              run: cd infra/env/${{inputs.environment}} && 
                terraform workspace select ${{inputs.environment}} || terraform workspace new ${{inputs.environment}} &&
                terraform plan -var-file="./${{inputs.environment}}/terraform.tfvars" -out=${{inputs.environment}}.plan

            - name: Terraform Apply
              run: cd infra/env/${{inputs.environment}} &&
                terraform workspace select ${{inputs.environment}} || terraform workspace new ${{inputs.environment}} &&
                terraform apply "${{inputs.environment}}.plan"

