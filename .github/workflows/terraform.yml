name: "Deploy Infra Gregorian"

on:
    workflow_call:
        inputs:
            environment: #Variavel que define o tipo de ambiente. OBS o valor deve ser dev prod ou nome e outra pasta que estiver dentro de /infra
                type: string
                required: true
            aws-assume-tole-arn: #ARN da Role que permite o GitHub fazer chamadas à AWS
                type: string
                required: true
            aws-region: #Região da AWS que o GitHub Actions atuará
                type: string
                required: true
            aws-bucket-statefile: # Nome do Bucket que guardará o statefile do terraform
                type: string
                required: true
            destroy:
                type: boolean
                required: true


jobs:
    terraform:
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: 1.9.8

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                    role-to-assume: ${{inputs.aws-assume-tole-arn}}
                    role-session-name: GitHub_Actions_Deploy_Gregorian_Infra
                    aws-region: ${{inputs.aws-region}}

            #Se destroy for true executa terraform destroy
            - name: Terraform Destroy
              if: inputs.destroy == true
              id: terraform-destroy
              run: cd infra &&
                terraform workspace select ${{ inputs.environment }} || terraform workspace new ${{ inputs.environment }} &&
                terraform destroy -var-file="./envs/${{ inputs.environment }}/terraform.tfvars" -auto-approve

            - name: Terraform Init
              if: inputs.destroy != true
              run: cd infra/env/${{inputs.environment}} && terraform init 
                  -backend-config="bucket=${{inputs.aws-bucket-statefile}}"  
                  -backend-config="key=${{github.event.repository.name}}" 
                  -backend-config="region=${{inputs.aws-region}}" 

            - name: Terraform Validate
              if: inputs.destroy != true
              run: terraform validate

            - name: Terraform Plan
              if: inputs.destroy != true
              run: cd infra/env/${{inputs.environment}} &&
                terraform plan -var-file="./terraform.tfvars" -out=${{inputs.environment}}.plan

            - name: Terraform Apply
              if: inputs.destroy != true
              run: cd infra/env/${{inputs.environment}} &&
                terraform apply "${{inputs.environment}}.plan"

